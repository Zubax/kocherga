dist: focal
env:
  - CTEST_OUTPUT_ON_FAILURE=1

before_script:
  - sudo apt-get install "linux-*-extra-$(uname -r)"
  - sudo modprobe can
  - sudo modprobe can_raw
  - sudo modprobe vcan
  - sudo ip link add dev can0 type vcan
  - sudo ip link set up can0
  - sudo ifconfig can0 up

matrix:
  include:
    # -------------------- GCC + SonarCloud --------------------
    - language: cpp
      addons:
        sonarcloud:
          organization: uavcan
          token:
            secure: "QeGejBj/U1WX+H5MF1Uy3lBQyejx1YrcOmP/ex6EaCT0iL8ulxPvv78QFWCn95AcubyBltUcpz/rDTiMI7H+D9Y+WlddmuOUyDaPI6xgmCanmLvtuLbSoCOhzW2u6pQx/6nzgEnAUT3wSwvInKwNRbvO5KHePQ4OS6Xd7k+DSQo92zDEEi/BCu9vFeLvpk76jIPg/y0zmu5c305SXvFis24n7nDQwt+2gePvAvLDw2mNHkaRNvNBSlO/irnXABN4yVAeZDiXoZlc2MGS2te14TUFtNjYweyfvcdCNaxXpGw+x8+0h1EMeh64cO53Om7NvBGmE+O+DznX0Bvcc2oZQVIMINmDssG6XlUJAmdQMzMfLB/ZDe27TPh92rUqeqEyOO4dn/eMdX4JdceIhaz7ZE1TzlbIx77dYUix5yUt3bB55GApxq1ptJL7VBVawGG22R9fDVKt5SGoXqwAJZKkgi4Plvupyh7x5SrVKJjA/yrJ/47pplGojAx/JBE71wbrt/XdTTHlz0MM7zdidHDEOrfGIWFzsagTmjueO2yvvhvZ+VCB/Y4sMOIb/izefb4BY/lFPu3h7Z/pNacziM9Ar3/QNl7DAddZ2B6McvTGXZyivf/FBtYL6cx/od0x2ip/Ylc/rRx6GT3h6AfblBD1Zg+WNG6zUwUcC4NhkpFXFpo="
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - g++-9-multilib
            - gcc-9-multilib
            - linux-libc-dev:i386
      env:
        - CXX=g++-9
      script:
        # ANALYSIS
        # Using the build wrapper from Sonar and collecting the code coverage.
        # Define NDEBUG=1 to avoid assertion checks being reported as uncovered statements.
        - cmake tests/native -DCMAKE_BUILD_TYPE=Debug -DNO_STATIC_ANALYSIS=1 -DCMAKE_CXX_FLAGS='-DNDEBUG=1'
        - build-wrapper-linux-x86-64 --out-dir sonar-dump make all
        - make test
        - gcov-9 --preserve-paths --long-file-names $(find CMakeFiles/test_cov.dir -name '*.gcno')
        - 'sonar-scanner -Dsonar.projectKey=Zubax_kocherga
                         -Dsonar.organization=zubax
                         -Dsonar.sources=kocherga,tests/native
                         -Dsonar.exclusions=tests/3rd_party/*
                         -Dsonar.cfamily.gcov.reportsPath=.
                         -Dsonar.cfamily.build-wrapper-output=sonar-dump
                         -Dsonar.cfamily.cache.enabled=false'
        - make clean

        # DEBUG
        - cmake tests/native -DCMAKE_BUILD_TYPE=Debug -DNO_STATIC_ANALYSIS=1
        - make all VERBOSE=1 && make test
        - make clean

        # RELEASE
        - cmake tests/native -DCMAKE_BUILD_TYPE=Release -DNO_STATIC_ANALYSIS=1
        - make all VERBOSE=1 && make test
        - make clean

    # -------------------- Clang 9 --------------------
    - language: cpp
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:  # Install a newer GCC because https://stackoverflow.com/a/51512150/1007777.
            - g++-9
            - g++-9-multilib
            - gcc-9-multilib
            - linux-libc-dev:i386
            - libc6-dev-i386
            - libstdc++-7-dev:i386
      script:
        # Set up the toolchain.
        - wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 9
        - sudo apt install clang-tidy-9 clang-format-9
        - clang++-9 -E -x c++ - -v < /dev/null    # Print the Clang configuration for troubleshooting purposes.

        # DEBUG
        - cmake -DCMAKE_CXX_COMPILER=clang++-9 tests/native -DCMAKE_BUILD_TYPE=Debug
        - make VERBOSE=1 && make test
        - make clean

        # RELEASE
        - cmake -DCMAKE_CXX_COMPILER=clang++-9 tests/native -DCMAKE_BUILD_TYPE=Release
        - make VERBOSE=1 && make test
        - make clean

        # RELWITHDEBINFO
        - cmake -DCMAKE_CXX_COMPILER=clang++-9 tests/native -DCMAKE_BUILD_TYPE=RelWithDebInfo
        - make VERBOSE=1 && make test
        - make clean

        # MINSIZEREL
        - cmake -DCMAKE_CXX_COMPILER=clang++-9 tests/native -DCMAKE_BUILD_TYPE=MinSizeRel
        - make VERBOSE=1 && make test
        - make clean

        # Format check
        - make format VERBOSE=1
        - 'modified="$(git status --porcelain --untracked-files=no)"'
        - 'if [ -n "$modified" ]; then echo "Run make format to reformat the code properly."; exit 1; fi'

    # -------------------- Python tooling --------------------
    - language: python
      python: '3.9'
      script:
        - python3 --version
        - ./tests/tools/test.sh

git:
  depth: false  # Disable shallow clone because it is incompatible with SonarCloud
